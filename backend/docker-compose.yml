version: "3.9"

services:
  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: omnicard-api
    ports:
      - "8001:8001"
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - OLLAMA_BASE_URL=http://llm-ollama:11435
      - MONGODB_URI=mongodb://mongodb:27018/omnicard
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DEBUG=${DEBUG:-false}
    volumes:
      - ./workspace:/app/workspace
      - ./datasets:/app/datasets
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      llm-ollama:
        condition: service_healthy
    networks:
      - omnicard-network

  llm-ollama:
    image: ollama/ollama:latest
    container_name: omnicard-ollama
    ports:
      - "11435:11435"
    volumes:
      - ollama_data:/root/.ollama
    command: >
      sh -c "ollama serve && 
             ollama pull TheBloke/Nous-Hermes-2-Yi-34B-GGUF:Q4_K_M"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11435/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 16G
        reservations:
          cpus: '2'
          memory: 8G
    networks:
      - omnicard-network

  mongodb:
    image: mongo:5
    container_name: omnicard-mongodb
    command: mongod --port 27018
    ports:
      - "27018:27018"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS:-secret}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27018/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    networks:
      - omnicard-network

  redis:
    image: redis:alpine
    container_name: omnicard-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-secret}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    networks:
      - omnicard-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: omnicard-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS:-secret}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    networks:
      - omnicard-network

volumes:
  mongodb_data:
  redis_data:
  rabbitmq_data:
  ollama_data:

networks:
  omnicard-network:
    external: true 